plugins {
    id 'com.android.application'
}
apply plugin: 'com.google.gms.google-services'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    aaptOptions {
        noCompress "tflite"
        // or noCompress "lite"
    }

    defaultConfig {
        applicationId "com.hrishita.difabled"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    flavorDimensions "tfliteInference"
    productFlavors {
        // The TFLite inference is built using the TFLite Java interpreter.
        interpreter {
            dimension "tfliteInference"
        }
        // Default: The TFLite inference is built using the TFLite Task library (high-level API).
        taskApi {
            getIsDefault().set(true)
            dimension "tfliteInference"
        }
    }
    buildFeatures {
        mlModelBinding true
    }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'

dependencies {
    implementation 'org.tensorflow:tensorflow-lite-support:0.1.0-rc1'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0-rc1'
// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
//apply from:'download_model.gradle'
    // --- camerax ---
    def camerax_version = "1.0.0-beta05"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation"androidx.camera:camera-view:1.0.0-alpha12"
    implementation "androidx.camera:camera-extensions:1.0.0-alpha12"
    //---- camerax ----
    implementation 'com.google.mlkit:image-labeling-custom:16.3.1'
    implementation 'com.google.android.gms:play-services-vision:19.0.0'

    implementation 'com.google.mlkit:object-detection:16.2.3'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'

    //implementation 'com.google.firebase:firebase-ml-vision-object-detection-model:19.0.6'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-messaging:20.2.3'
    implementation 'com.google.firebase:firebase-auth:19.3.2'
    testImplementation 'junit:junit:4.+'
    implementation 'com.synnapps:carouselview:0.1.5'
    implementation "androidx.cardview:cardview:1.0.0"
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.google.android:flexbox:2.0.1'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.72'
    implementation 'com.google.firebase:firebase-firestore:22.0.1'
    implementation 'com.google.firebase:firebase-database:19.3.1'
    implementation 'com.google.firebase:firebase-storage:19.1.1'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.19'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.chaos.view:pinview:1.4.3'
    implementation "com.google.android.gms:play-services-location:15.0.1"

    implementation platform('com.google.firebase:firebase-bom:26.1.1')
    implementation 'com.google.firebase:firebase-analytics'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    //implementation 'com.google.mlkit:object-detection:16.2.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'com.ismaeldivita.chipnavigation:chip-navigation-bar:1.3.2'
    //newtf
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation 'org.tensorflow:tensorflow-lite-support:0.1.0-rc1'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0-rc1'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.2.0'
    interpreterImplementation project(":lib_interpreter")
   taskApiImplementation project(":lib_task_api")
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'

    //currency detectoin
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation "androidx.exifinterface:exifinterface:1.3.2"
    implementation 'org.tensorflow:tensorflow-android:1.13.1'
    implementation "androidx.annotation:annotation:1.2.0"

    def appcompat_version = "1.2.0"
    implementation 'junit:junit:4.12'

    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
}